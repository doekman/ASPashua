{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Verdana;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red108\green5\blue211;\red0\green0\blue255;
\red76\green78\blue78;\red64\green128\blue0;\red251\green0\blue7;\red0\green22\blue176;\red68\green21\blue176;
}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0;\csgenericrgb\c42337\c1841\c82833;\csgenericrgb\c0\c0\c100000;
\csgenericrgb\c29999\c30457\c30457;\csgenericrgb\c25000\c50001\c0;\cssrgb\c100000\c0\c0;\csgenericrgb\c0\c8656\c68986;\csgenericrgb\c26552\c8264\c69162;
}
\deftab480
\pard\pardeftab480\slleading40\pardirnatural\partightenfactor0

\f0\b\fs24 \cf2 use
\b0 \cf2  \cf3 AppleScript\cf2  \cf4 version\cf2  \cf2 "2.4"\cf2 \

\b \cf2 use
\b0 \cf2  
\i \cf4 scripting additions
\i0 \cf2 \

\b \cf2 use
\b0 \cf2  
\i \cf4 framework
\i0 \cf2  \cf2 "Foundation"\cf2 \
\
\cf5 --\'bb 1. Public handlers\cf2 \
\

\b \cf2 on
\b0 \cf2  
\b \cf4 custom pashua location
\b0 \cf2  \cf6 new_path\cf2 \
	
\b \cf2 global
\b0 \cf2  \cf6 pashua_binary\cf2 \
	\
	
\b \cf2 set
\b0 \cf2  \cf6 new_path\cf2  
\b \cf2 to
\b0 \cf2  \cf7 to_alias\cf2 (\cf6 new_path\cf2 )\
	
\b \cf2 tell
\b0 \cf2  
\i \cf4 application
\i0 \cf2  \cf2 "Finder"\cf2 \
		
\b \cf2 if
\b0 \cf2  
\b \cf2 not
\b0 \cf2  (\cf6 new_path\cf2  
\b \cf4 exists
\b0 \cf2 ) 
\b \cf2 then
\b0 \cf2 \
			
\b \cf2 error
\b0 \cf2  \cf2 "New path to Pashua.app does not exist"\cf2  \cf4 number\cf2  \cf2 1003\cf2  \cf4 from\cf2  \cf6 new_path\cf2 \
		
\b \cf2 end
\b0 \cf2  
\b \cf2 if
\b0 \cf2 \
	
\b \cf2 end
\b0 \cf2  
\b \cf2 tell
\b0 \cf2 \
	
\b \cf2 set
\b0 \cf2  \cf6 pashua_binary\cf2  
\b \cf2 to
\b0 \cf2  (\cf3 POSIX path\cf2  
\b \cf2 of
\b0 \cf2  \cf6 new_path\cf2 ) & \cf2 "Contents/MacOS/Pashua"\cf2 \

\b \cf2 end
\b0 \cf2  
\b \cf4 custom pashua location
\b0 \cf2 \
\

\b \cf2 on
\b0 \cf2  
\b \cf4 display pashua dialog
\b0 \cf2  \cf6 config\cf2  \cf4 dynamic values\cf2  \cf6 value_record\cf2  : 
\i \cf4 missing value
\i0 \cf2 \
	
\b \cf2 local
\b0 \cf2  \cf6 config_text\cf2 , \cf6 config_dynamic_text\cf2 , \cf6 result_lines\cf2 , \cf6 result_dict\cf2 \
	\
	
\b \cf2 if
\b0 \cf2  \cf6 value_record\cf2  
\b \cf2 is
\b0 \cf2  
\b \cf2 not
\b0 \cf2  
\i \cf4 missing value
\i0 \cf2  
\b \cf2 then
\b0 \cf2 \
		
\b \cf2 if
\b0 \cf2  
\i \cf4 class
\i0 \cf2  
\b \cf2 of
\b0 \cf2  \cf6 config\cf2  
\b \cf2 is
\b0 \cf2  
\i \cf4 alias
\i0 \cf2  
\b \cf2 then
\b0 \cf2 \
			
\b \cf2 set
\b0 \cf2  \cf6 config_text\cf2  
\b \cf2 to
\b0 \cf2  \cf7 do_shell_with_log\cf2 (\cf2 "read config alias"\cf2 , \cf2 "cat "\cf2  & \cf3 quoted form\cf2  
\b \cf2 of
\b0 \cf2  \cf3 POSIX path\cf2  
\b \cf2 of
\b0 \cf2  \cf6 config\cf2 )\
		
\b \cf2 else
\b0 \cf2  
\b \cf2 if
\b0 \cf2  
\i \cf4 class
\i0 \cf2  
\b \cf2 of
\b0 \cf2  \cf6 config\cf2  
\b \cf2 is
\b0 \cf2  
\i \cf4 text
\i0 \cf2  
\b \cf2 then
\b0 \cf2 \
			
\b \cf2 if
\b0 \cf2  \cf6 config\cf2  
\b \cf2 starts with
\b0 \cf2  \cf2 "/"\cf2  
\b \cf2 then
\b0 \cf2 \
				\cf5 -- Auto-detection. Pashua config never starts with a slash\cf2 \
				
\b \cf2 set
\b0 \cf2  \cf6 config_text\cf2  
\b \cf2 to
\b0 \cf2  \cf7 do_shell_with_log\cf2 (\cf2 "read config posix"\cf2 , \cf2 "cat "\cf2  & \cf3 quoted form\cf2  
\b \cf2 of
\b0 \cf2  \cf6 config\cf2 )\
			
\b \cf2 else
\b0 \cf2 \
				
\b \cf2 set
\b0 \cf2  \cf6 config_text\cf2  
\b \cf2 to
\b0 \cf2  \cf6 config\cf2 \
			
\b \cf2 end
\b0 \cf2  
\b \cf2 if
\b0 \cf2 \
		
\b \cf2 else
\b0 \cf2 \
			
\b \cf2 error
\b0 \cf2  \cf2 "Call this method with either 'text' of 'alias', not with '"\cf2  & (
\i \cf4 class
\i0 \cf2  
\b \cf2 of
\b0 \cf2  \cf6 config\cf2 ) & \cf2 "'"\cf2  \cf4 number\cf2  \cf2 1000\cf2 \
		
\b \cf2 end
\b0 \cf2  
\b \cf2 if
\b0 \cf2 \
		
\b \cf2 set
\b0 \cf2  \cf6 config_dynamic_text\cf2  
\b \cf2 to
\b0 \cf2  \cf7 value_record_to_config\cf2 (\cf6 value_record\cf2 )\
		
\b \cf2 set
\b0 \cf2  \cf6 config\cf2  
\b \cf2 to
\b0 \cf2  \cf6 config_text\cf2  & \cf3 linefeed\cf2  & \cf6 config_dynamic_text\cf2 \
	
\b \cf2 end
\b0 \cf2  
\b \cf2 if
\b0 \cf2 \
	\
	
\b \cf2 set
\b0 \cf2  \cf6 result_lines\cf2  
\b \cf2 to
\b0 \cf2  \cf7 _call_pashua\cf2 (\cf2 "display pashua dialog"\cf2 , \cf6 config\cf2 )\
	
\b \cf2 set
\b0 \cf2  \cf6 result_dict\cf2  
\b \cf2 to
\b0 \cf2  \cf7 _ini_to_dictionary\cf2 (\cf6 result_lines\cf2 )\
	
\b \cf2 return
\b0 \cf2  \cf6 result_dict\cf2  
\b \cf2 as
\b0 \cf2  
\i \cf4 record
\i0 \cf2 \

\b \cf2 end
\b0 \cf2  
\b \cf4 display pashua dialog
\b0 \cf2 \
\
\
\cf5 --\'bb 2. Private handlers\cf2 \
\
\cf5 --| Call to show a Pashua dialog\cf2 \
\cf5 --| api_name: just a string, used for logging (so the user can see where the call came from)\cf2 \
\cf5 --| config: text or alias\cf2 \
\cf5 --| returns: a record\cf2 \

\b \cf2 on
\b0 \cf2  \cf7 _call_pashua\cf2 (\cf6 api_name\cf2 , \cf6 config\cf2 )\
	
\b \cf2 local
\b0 \cf2  \cf6 pashua_cmd\cf2 , \cf6 pashua_res\cf2 , \cf6 result_lines\cf2 \
	\cf5 -- Get path to Pashua binary\cf2 \
	
\b \cf2 set
\b0 \cf2  \cf6 pashua_binary\cf2  
\b \cf2 to
\b0 \cf2  \cf7 _get_pashua_posix_path\cf2 ()\
	\
	\cf5 -- Call with either text or alias\cf2 \
	
\b \cf2 if
\b0 \cf2  
\i \cf4 class
\i0 \cf2  
\b \cf2 of
\b0 \cf2  \cf6 config\cf2  
\b \cf2 is
\b0 \cf2  
\i \cf4 text
\i0 \cf2  
\b \cf2 then
\b0 \cf2 \
		
\b \cf2 if
\b0 \cf2  \cf6 config\cf2  
\b \cf2 starts with
\b0 \cf2  \cf2 "/"\cf2  
\b \cf2 then
\b0 \cf2 \
			\cf5 -- Auto-detection. Pashua config never starts with a slash\cf2 \
			
\b \cf2 set
\b0 \cf2  \cf6 pashua_cmd\cf2  
\b \cf2 to
\b0 \cf2  \cf3 quoted form\cf2  
\b \cf2 of
\b0 \cf2  \cf6 pashua_binary\cf2  & \cf3 space\cf2  & \cf3 quoted form\cf2  
\b \cf2 of
\b0 \cf2  \cf6 config\cf2 \
		
\b \cf2 else
\b0 \cf2 \
			
\b \cf2 set
\b0 \cf2  \cf6 pashua_cmd\cf2  
\b \cf2 to
\b0 \cf2  \cf2 "echo "\cf2  & \cf3 quoted form\cf2  
\b \cf2 of
\b0 \cf2  \cf6 config\cf2  & \cf2 " | "\cf2  & \cf3 quoted form\cf2  
\b \cf2 of
\b0 \cf2  \cf6 pashua_binary\cf2  & \cf2 " -"\cf2 \
		
\b \cf2 end
\b0 \cf2  
\b \cf2 if
\b0 \cf2 \
	
\b \cf2 else
\b0 \cf2  
\b \cf2 if
\b0 \cf2  
\i \cf4 class
\i0 \cf2  
\b \cf2 of
\b0 \cf2  \cf6 config\cf2  
\b \cf2 is
\b0 \cf2  
\i \cf4 alias
\i0 \cf2  
\b \cf2 then
\b0 \cf2 \
		
\b \cf2 set
\b0 \cf2  \cf6 pashua_cmd\cf2  
\b \cf2 to
\b0 \cf2  \cf3 quoted form\cf2  
\b \cf2 of
\b0 \cf2  \cf6 pashua_binary\cf2  & \cf3 space\cf2  & \cf3 quoted form\cf2  
\b \cf2 of
\b0 \cf2  \cf3 POSIX path\cf2  
\b \cf2 of
\b0 \cf2  \cf6 config\cf2 \
	
\b \cf2 else
\b0 \cf2 \
		
\b \cf2 error
\b0 \cf2  \cf2 "Call this method with either 'text' of 'alias', not with '"\cf2  & (
\i \cf4 class
\i0 \cf2  
\b \cf2 of
\b0 \cf2  \cf6 config\cf2 ) & \cf2 "'"\cf2  \cf4 number\cf2  \cf2 1000\cf2 \
	
\b \cf2 end
\b0 \cf2  
\b \cf2 if
\b0 \cf2 \
	\
	\cf5 -- Call pashua\cf2 \
	
\b \cf2 set
\b0 \cf2  \cf6 pashua_res\cf2  
\b \cf2 to
\b0 \cf2  \cf7 do_shell_with_log\cf2 (\cf6 api_name\cf2 , \cf6 pashua_cmd\cf2 )\
	\
	
\b \cf2 set
\b0 \cf2  \cf6 result_lines\cf2  
\b \cf2 to
\b0 \cf2  \cf7 split_string\cf2 (\cf6 pashua_res\cf2 , \cf3 return\cf2 )\
	\
	\cf5 -- There was an error in the config (for example the following line: "x=y")\cf2 \
	\cf5 --or there were no inputs and no buttons defined, and the (implicit defined) default button was pressed\cf2 \
	\cf5 --or the red [x] close button was pressed with no cancel button was defined\cf2 \
	\cf5 --or gave up (autoclosetime) without cancel button defined\cf2 \
	
\b \cf2 if
\b0 \cf2  (
\b \cf4 count
\b0 \cf2  
\b \cf2 of
\b0 \cf2  \cf6 result_lines\cf2 ) 
\b \cf2 is
\b0 \cf2  \cf2 0\cf2  
\b \cf2 then
\b0 \cf2  
\b \cf2 error
\b0 \cf2  \cf2 "It looks like Pashua.app had some problems using the window configuration (no text lines were returned)."\cf2  \cf4 number\cf2  \cf2 1001\cf2 \
	\
	\cf5 -- User pressed cancel\cf2 \
	\cf5 -- or only one input/button is defined\cf2 \
	
\b \cf2 if
\b0 \cf2  (
\b \cf4 count
\b0 \cf2  
\b \cf2 of
\b0 \cf2  \cf6 result_lines\cf2 ) 
\b \cf2 is
\b0 \cf2  \cf2 1\cf2  
\b \cf2 then
\b0 \cf2  
\b \cf2 error
\b0 \cf2  \cf4 number\cf2  \cf2 -128\cf2  \cf5 --user canceled\cf2 \
	\
	
\b \cf2 return
\b0 \cf2  \cf6 result_lines\cf2 \

\b \cf2 end
\b0 \cf2  \cf7 _call_pashua\cf2 \
\
\cf5 --| Parses Pashua's output to a NSDictionary (which can be converted to an AppleScript record)\cf2 \

\b \cf2 on
\b0 \cf2  \cf7 _ini_to_dictionary\cf2 (\cf6 ini_lines\cf2  
\b \cf2 as
\b0 \cf2  
\i \cf4 list
\i0 \cf2 )\
	
\b \cf2 local
\b0 \cf2  \cf6 result_dictionary\cf2 , \cf6 pos\cf2 , \cf6 key_string\cf2 , \cf6 value_string\cf2 \
	
\b \cf2 set
\b0 \cf2  \cf6 number_of_lines\cf2  
\b \cf2 to
\b0 \cf2  
\b \cf4 count
\b0 \cf2  
\b \cf2 of
\b0 \cf2  \cf6 ini_lines\cf2 \
	
\b \cf2 set
\b0 \cf2  \cf6 result_dictionary\cf2  
\b \cf2 to
\b0 \cf2  
\i \cf3 current application's
\i0 \cf2  \cf6 NSMutableDictionary's\cf2  \cf7 dictionaryWithCapacity\cf2 :\cf6 number_of_lines\cf2 \
	
\b \cf2 repeat
\b0 \cf2  
\b \cf2 with
\b0 \cf2  \cf6 text_line\cf2  
\b \cf2 in
\b0 \cf2  \cf6 ini_lines\cf2 \
		
\b \cf2 set
\b0 \cf2  \{\cf6 key_string\cf2 , \cf6 value_string\cf2 \} 
\b \cf2 to
\b0 \cf2  \cf7 _parse_pashua_result_line\cf2 (\cf6 text_line\cf2 )\
		(\cf6 result_dictionary's\cf2  \cf7 setValue\cf2 :\cf6 value_string\cf2  \cf7 forKey\cf2 :\cf6 key_string\cf2 )\
	
\b \cf2 end
\b0 \cf2  
\b \cf2 repeat
\b0 \cf2 \
	
\b \cf2 return
\b0 \cf2  \cf6 result_dictionary\cf2 \

\b \cf2 end
\b0 \cf2  \cf7 _ini_to_dictionary\cf2 \
\

\b \cf2 on
\b0 \cf2  \cf7 _parse_pashua_result_line\cf2 (\cf6 result_line\cf2 )\
	
\b \cf2 local
\b0 \cf2  \cf6 post\cf2 , \cf6 key_string\cf2 , \cf6 value_string\cf2 \
	\
	
\b \cf2 set
\b0 \cf2  \cf6 pos\cf2  
\b \cf2 to
\b0 \cf2  
\b \cf8 offset
\b0 \cf2  \cf8 of\cf2  \cf2 "="\cf2  \cf8 in\cf2  \cf6 result_line\cf2 \
	
\b \cf2 set
\b0 \cf2  \cf6 key_string\cf2  
\b \cf2 to
\b0 \cf2  
\i \cf4 text
\i0 \cf2  \cf2 1\cf2  
\b \cf2 thru
\b0 \cf2  (\cf6 pos\cf2  - \cf2 1\cf2 ) 
\b \cf2 of
\b0 \cf2  \cf6 result_line\cf2 \
	
\b \cf2 if
\b0 \cf2  (
\b \cf4 count
\b0 \cf2  
\b \cf2 of
\b0 \cf2  \cf6 result_line\cf2 ) \uc0\u8804  \cf6 pos\cf2  
\b \cf2 then
\b0 \cf2 \
		
\b \cf2 set
\b0 \cf2  \cf6 value_string\cf2  
\b \cf2 to
\b0 \cf2  \cf2 ""\cf2  \cf5 --use empty string, because missing value won't show up in record\cf2 \
	
\b \cf2 else
\b0 \cf2 \
		
\b \cf2 set
\b0 \cf2  \cf6 value_string\cf2  
\b \cf2 to
\b0 \cf2  
\i \cf4 text
\i0 \cf2  (\cf6 pos\cf2  + \cf2 1\cf2 ) 
\b \cf2 thru
\b0 \cf2  (\cf3 length\cf2  
\b \cf2 of
\b0 \cf2  \cf6 result_line\cf2 ) 
\b \cf2 of
\b0 \cf2  \cf6 result_line\cf2 \
	
\b \cf2 end
\b0 \cf2  
\b \cf2 if
\b0 \cf2 \
	
\b \cf2 return
\b0 \cf2  \{\cf6 key_string\cf2 , \cf6 value_string\cf2 \}\

\b \cf2 end
\b0 \cf2  \cf7 _parse_pashua_result_line\cf2 \
\
\cf5 -- converts a record to a Pashua-config text. Rules for any given key:value-pair\cf2 \
\cf5 -- * key == "*": shortcut for "*.title" => "*.title=\{value\}"\cf2 \
\cf5 -- a key without a ".", the default-attribute it is assumed => "\{key\}.default=\{value\}"\cf2 \
\cf5 -- a key with a ".": => "\{key\}=\{value\}" (when key is a list, every item becomes a line)\cf2 \
\cf5 -- When the value is a list, for every item a line will be made (example: \{|my_pop.option|:\{"one","two"\}\})\cf2 \

\b \cf2 on
\b0 \cf2  \cf7 value_record_to_config\cf2 (\cf6 value_record\cf2 )\
	
\b \cf2 local
\b0 \cf2  \cf6 config_lines\cf2 , \cf6 value_dict\cf2 , \cf6 all_keys\cf2 , \cf6 the_key_text\cf2 , \cf6 dict_value\cf2 , \cf6 value_text\cf2 , \cf6 value_list\cf2 \
	\
	
\b \cf2 set
\b0 \cf2  \cf6 config_lines\cf2  
\b \cf2 to
\b0 \cf2  \{\}\
	
\b \cf2 set
\b0 \cf2  \cf6 value_dict\cf2  
\b \cf2 to
\b0 \cf2  
\i \cf3 current application's
\i0 \cf2  \cf6 NSDictionary's\cf2  \cf7 dictionaryWithDictionary\cf2 :\cf6 value_record\cf2 \
	
\b \cf2 set
\b0 \cf2  \cf6 all_keys\cf2  
\b \cf2 to
\b0 \cf2  \cf6 value_dict's\cf2  \cf7 allKeys\cf2 ()\
	
\b \cf2 repeat
\b0 \cf2  
\b \cf2 with
\b0 \cf2  \cf6 key_text\cf2  
\b \cf2 in
\b0 \cf2  \cf6 all_keys\cf2 \
		
\b \cf2 set
\b0 \cf2  \cf6 the_key_text\cf2  
\b \cf2 to
\b0 \cf2  \cf3 contents\cf2  
\b \cf2 of
\b0 \cf2  \cf6 key_text\cf2  
\b \cf2 as
\b0 \cf2  
\i \cf4 text
\i0 \cf2 \
		
\b \cf2 set
\b0 \cf2  \cf6 dict_value\cf2  
\b \cf2 to
\b0 \cf2  (\cf6 value_dict's\cf2  \cf7 valueForKey\cf2 :\cf6 the_key_text\cf2 )\
		
\b \cf2 if
\b0 \cf2  (\cf6 dict_value's\cf2  \cf7 isKindOfClass\cf2 :(
\i \cf3 current application's
\i0 \cf2  \cf6 NSArray\cf2 )) 
\b \cf2 then
\b0 \cf2 \
			
\b \cf2 set
\b0 \cf2  \cf6 value_list\cf2  
\b \cf2 to
\b0 \cf2  \cf6 dict_value\cf2  
\b \cf2 as
\b0 \cf2  
\i \cf4 list
\i0 \cf2 \
		
\b \cf2 else
\b0 \cf2 \
			\cf5 --TODO: smart convert (IE: date to ISO-string, alias to posix path) \cf2 \
			\cf5 --and remember converts, so same type can be used when converting Pashua's output\cf2 \
			
\b \cf2 set
\b0 \cf2  \cf6 value_list\cf2  
\b \cf2 to
\b0 \cf2  \{\cf6 dict_value\cf2  
\b \cf2 as
\b0 \cf2  
\i \cf4 text
\i0 \cf2 \}\
		
\b \cf2 end
\b0 \cf2  
\b \cf2 if
\b0 \cf2 \
		
\b \cf2 repeat
\b0 \cf2  
\b \cf2 with
\b0 \cf2  \cf6 value_item\cf2  
\b \cf2 in
\b0 \cf2  \cf6 value_list\cf2 \
			
\b \cf2 set
\b0 \cf2  \cf6 value_text\cf2  
\b \cf2 to
\b0 \cf2  (\cf3 contents\cf2  
\b \cf2 of
\b0 \cf2  \cf6 value_item\cf2 ) 
\b \cf2 as
\b0 \cf2  
\i \cf4 text
\i0 \cf2  \cf5 --also "as text", because "dict_values as list" above doesn't convert to text\cf2 \
			
\b \cf2 copy
\b0 \cf2  \cf7 key_value_to_config_line\cf2 (\cf6 the_key_text\cf2 , \cf6 value_text\cf2 ) 
\b \cf2 to
\b0 \cf2  
\b \cf2 the
\b0 \cf2  
\b \cf2 end
\b0 \cf2  
\b \cf2 of
\b0 \cf2  \cf6 config_lines\cf2 \
		
\b \cf2 end
\b0 \cf2  
\b \cf2 repeat
\b0 \cf2 \
	
\b \cf2 end
\b0 \cf2  
\b \cf2 repeat
\b0 \cf2 \
	
\b \cf2 return
\b0 \cf2  \cf7 join_list\cf2 (\cf6 config_lines\cf2 , \cf3 linefeed\cf2 )\

\b \cf2 end
\b0 \cf2  \cf7 value_record_to_config\cf2 \
\

\b \cf2 on
\b0 \cf2  \cf7 key_value_to_config_line\cf2 (\cf6 key_text\cf2 , \cf6 value_text\cf2 )\
	
\b \cf2 local
\b0 \cf2  \cf6 config_line\cf2 \
	\
	
\b \cf2 if
\b0 \cf2  \cf6 key_text\cf2  
\b \cf2 is
\b0 \cf2  \cf2 "*"\cf2  
\b \cf2 then
\b0 \cf2 \
		
\b \cf2 set
\b0 \cf2  \cf6 config_line\cf2  
\b \cf2 to
\b0 \cf2  \cf2 "*.title="\cf2 \
	
\b \cf2 else
\b0 \cf2  
\b \cf2 if
\b0 \cf2  \cf6 key_text\cf2  
\b \cf2 contains
\b0 \cf2  \cf2 "."\cf2  
\b \cf2 then
\b0 \cf2 \
		
\b \cf2 set
\b0 \cf2  \cf6 config_line\cf2  
\b \cf2 to
\b0 \cf2  \cf6 key_text\cf2  & \cf2 "="\cf2 \
	
\b \cf2 else
\b0 \cf2 \
		
\b \cf2 set
\b0 \cf2  \cf6 config_line\cf2  
\b \cf2 to
\b0 \cf2  \cf6 key_text\cf2  & \cf2 ".default="\cf2 \
	
\b \cf2 end
\b0 \cf2  
\b \cf2 if
\b0 \cf2 \
	\cf5 --TODO: smart processing of linefeed/return to "\\n" and/or "[return]"?\cf2 \
	
\b \cf2 set
\b0 \cf2  \cf6 config_line\cf2  
\b \cf2 to
\b0 \cf2  \cf6 config_line\cf2  & \cf6 value_text\cf2 \
	
\b \cf2 return
\b0 \cf2  \cf6 config_line\cf2 \

\b \cf2 end
\b0 \cf2  \cf7 key_value_to_config_line\cf2 \
\
\
\cf5 --\'bb 3. Generic utility handlers (list/string/alias/log\cf2 \
\

\b \cf2 to
\b0 \cf2  \cf7 join_list\cf2 (\cf6 aList\cf2  
\b \cf2 as
\b0 \cf2  
\i \cf4 list
\i0 \cf2 , \cf6 delimiter\cf2  
\b \cf2 as
\b0 \cf2  
\i \cf4 text
\i0 \cf2 )\
	
\b \cf2 local
\b0 \cf2  \cf6 sourceList\cf2 , \cf6 res\cf2 \
	
\b \cf2 set
\b0 \cf2  
\b \cf2 the
\b0 \cf2  \cf6 sourceList\cf2  
\b \cf2 to
\b0 \cf2  
\i \cf3 current application's
\i0 \cf2  \cf6 NSArray's\cf2  \cf7 arrayWithArray\cf2 :\cf6 aList\cf2 \
	
\b \cf2 set
\b0 \cf2  \cf6 res\cf2  
\b \cf2 to
\b0 \cf2  \cf6 sourceList's\cf2  \cf7 componentsJoinedByString\cf2 :\cf6 delimiter\cf2 \
	
\b \cf2 return
\b0 \cf2  \cf6 res\cf2  
\b \cf2 as
\b0 \cf2  
\i \cf4 text
\i0 \cf2 \

\b \cf2 end
\b0 \cf2  \cf7 join_list\cf2 \
\

\b \cf2 to
\b0 \cf2  \cf7 split_string\cf2 (\cf6 aString\cf2  
\b \cf2 as
\b0 \cf2  
\i \cf4 text
\i0 \cf2 , \cf6 delimiter\cf2  
\b \cf2 as
\b0 \cf2  
\i \cf4 text
\i0 \cf2 )\
	
\b \cf2 local
\b0 \cf2  \cf6 sourceString\cf2 , \cf6 res\cf2 \
	
\b \cf2 if
\b0 \cf2  \cf6 aString\cf2  
\b \cf2 is
\b0 \cf2  \cf2 ""\cf2  
\b \cf2 then
\b0 \cf2  
\b \cf2 return
\b0 \cf2  \{\} \cf5 --special case\cf2 \
	
\b \cf2 set
\b0 \cf2  
\b \cf2 the
\b0 \cf2  \cf6 sourceList\cf2  
\b \cf2 to
\b0 \cf2  
\i \cf3 current application's
\i0 \cf2  \cf6 NSString's\cf2  \cf7 stringWithString\cf2 :\cf6 aString\cf2 \
	
\b \cf2 set
\b0 \cf2  \cf6 res\cf2  
\b \cf2 to
\b0 \cf2  \cf6 sourceList's\cf2  \cf7 componentsSeparatedByString\cf2 :\cf6 delimiter\cf2 \
	
\b \cf2 return
\b0 \cf2  \cf6 res\cf2  
\b \cf2 as
\b0 \cf2  
\i \cf4 list
\i0 \cf2 \

\b \cf2 end
\b0 \cf2  \cf7 split_string\cf2 \
\

\b \cf2 on
\b0 \cf2  \cf7 replace_text\cf2 (\cf6 searchString\cf2  
\b \cf2 as
\b0 \cf2  
\i \cf4 text
\i0 \cf2 , \cf6 replacementString\cf2  
\b \cf2 as
\b0 \cf2  
\i \cf4 text
\i0 \cf2 , \cf6 sourceText\cf2 )\
	
\b \cf2 local
\b0 \cf2  \cf6 sourceString\cf2 , \cf6 adjustedString\cf2 \
	
\b \cf2 if
\b0 \cf2  \cf6 sourceText\cf2  
\b \cf2 is
\b0 \cf2  
\i \cf4 missing value
\i0 \cf2  
\b \cf2 then
\b0 \cf2 \
		
\b \cf2 return
\b0 \cf2  \cf6 sourceText\cf2 \
	
\b \cf2 end
\b0 \cf2  
\b \cf2 if
\b0 \cf2 \
	
\b \cf2 set
\b0 \cf2  
\b \cf2 the
\b0 \cf2  \cf6 sourceString\cf2  
\b \cf2 to
\b0 \cf2  
\i \cf3 current application's
\i0 \cf2  \cf6 NSString's\cf2  \cf7 stringWithString\cf2 :\cf6 sourceText\cf2 \
	
\b \cf2 set
\b0 \cf2  
\b \cf2 the
\b0 \cf2  \cf6 adjustedString\cf2  
\b \cf2 to
\b0 \cf2  
\b \cf2 the
\b0 \cf2  \cf6 sourceString's\cf2  \cf7 stringByReplacingOccurrencesOfString\cf2 :\cf6 searchString\cf2  \cf7 withString\cf2 :\cf6 replacementString\cf2 \
	
\b \cf2 return
\b0 \cf2  \cf6 adjustedString\cf2  
\b \cf2 as
\b0 \cf2  
\i \cf4 text
\i0 \cf2 \

\b \cf2 end
\b0 \cf2  \cf7 replace_text\cf2 \
\
\cf5 --| Make sure the argument (file, alias, text) is always returned as an alias.\cf2 \
\cf5 --| Text can be POSIX format (/Path/to/file.txt) or HFS+ format (Computer:Path:to:file.txt)\cf2 \

\b \cf2 on
\b0 \cf2  \cf7 to_alias\cf2 (\cf6 file_path\cf2 )\
	
\b \cf2 if
\b0 \cf2  
\i \cf4 class
\i0 \cf2  
\b \cf2 of
\b0 \cf2  \cf6 file_path\cf2  
\b \cf2 is
\b0 \cf2  
\i \cf4 text
\i0 \cf2  
\b \cf2 then
\b0 \cf2 \
		
\b \cf2 if
\b0 \cf2  \cf6 file_path\cf2  
\b \cf2 starts with
\b0 \cf2  \cf2 "/"\cf2  
\b \cf2 then
\b0 \cf2 \
			
\b \cf2 set
\b0 \cf2  \cf6 file_path\cf2  
\b \cf2 to
\b0 \cf2  (
\i \cf4 POSIX file
\i0 \cf2  \cf6 file_path\cf2 ) 
\b \cf2 as
\b0 \cf2  
\i \cf4 alias
\i0 \cf2 \
		
\b \cf2 else
\b0 \cf2 \
			
\b \cf2 set
\b0 \cf2  \cf6 file_path\cf2  
\b \cf2 to
\b0 \cf2  \cf6 file_path\cf2  
\b \cf2 as
\b0 \cf2  
\i \cf4 alias
\i0 \cf2 \
		
\b \cf2 end
\b0 \cf2  
\b \cf2 if
\b0 \cf2 \
	
\b \cf2 else
\b0 \cf2  
\b \cf2 if
\b0 \cf2  
\i \cf4 class
\i0 \cf2  
\b \cf2 of
\b0 \cf2  \cf6 file_path\cf2  
\b \cf2 is
\b0 \cf2  
\i \cf4 file
\i0 \cf2  
\b \cf2 then
\b0 \cf2 \
		
\b \cf2 set
\b0 \cf2  \cf6 file_path\cf2  
\b \cf2 to
\b0 \cf2  \cf6 file_path\cf2  
\b \cf2 as
\b0 \cf2  
\i \cf4 alias
\i0 \cf2 \
	
\b \cf2 end
\b0 \cf2  
\b \cf2 if
\b0 \cf2 \
	\
	
\b \cf2 return
\b0 \cf2  \cf6 file_path\cf2 \

\b \cf2 end
\b0 \cf2  \cf7 to_alias\cf2 \
\
\cf5 --| Executes a shell command, and logs before and after\cf2 \

\b \cf2 on
\b0 \cf2  \cf7 do_shell_with_log\cf2 (\cf6 title\cf2 , \cf6 command\cf2 )\
	\cf7 do_log\cf2 (\cf6 title\cf2  & \cf2 " COMMAND ["\cf2  & \cf6 command\cf2  & \cf2 "]"\cf2 )\
	
\b \cf2 try
\b0 \cf2 \
		
\b \cf2 set
\b0 \cf2  \cf6 shell_result\cf2  
\b \cf2 to
\b0 \cf2  
\b \cf8 do shell script
\b0 \cf2  \cf6 command\cf2 \
		\cf7 do_log\cf2 (\cf6 title\cf2  & \cf2 " RESULT ["\cf2  & \cf6 shell_result\cf2  & \cf2 "]"\cf2 )\
	
\b \cf2 on
\b0 \cf2  
\b \cf2 error
\b0 \cf2  \cf6 err_msg\cf2  \cf4 number\cf2  \cf6 err_nr\cf2 \
		\cf7 do_log\cf2 (\cf6 title\cf2  & \cf2 " RESULT, EXIT CODE "\cf2  & \cf6 err_nr\cf2  & \cf2 ", error message ["\cf2  & \cf6 err_msg\cf2  & \cf2 "]"\cf2 )\
		
\b \cf2 error
\b0 \cf2  \cf6 err_msg\cf2  \cf4 number\cf2  \cf6 err_nr\cf2 \
	
\b \cf2 end
\b0 \cf2  
\b \cf2 try
\b0 \cf2 \
	
\b \cf2 return
\b0 \cf2  \cf6 shell_result\cf2 \

\b \cf2 end
\b0 \cf2  \cf7 do_shell_with_log\cf2 \
\
\cf5 --| Log a line of text to ~/Library/Logs/Catsdeep/ASPashua.log\cf2 \

\b \cf2 on
\b0 \cf2  \cf7 do_log\cf2 (\cf6 log_message\cf2 )\
	
\b \cf2 if
\b0 \cf2  \cf7 _do_log_to_file\cf2 () 
\b \cf2 then
\b0 \cf2 \
		
\b \cf2 set
\b0 \cf2  \cf6 log_folder\cf2  
\b \cf2 to
\b0 \cf2  \cf2 "~/Library/Logs/Catsdeep"\cf2 \
		
\b \cf2 set
\b0 \cf2  \cf6 q_msg\cf2  
\b \cf2 to
\b0 \cf2  \cf3 quoted form\cf2  
\b \cf2 of
\b0 \cf2  \cf6 log_message\cf2 \
		
\b \cf2 set
\b0 \cf2  \cf6 cmd\cf2  
\b \cf2 to
\b0 \cf2  \cf2 "D="\cf2  & \cf6 log_folder\cf2  & \cf2 ";M="\cf2  & \cf6 q_msg\cf2  & \cf2 "; [ ! -d $D ] && mkdir -p $D; echo $(date -u): \\"$M\\" >> $D/ASPashua.log 2>&1"\cf2 \
		
\b \cf8 do shell script
\b0 \cf2  \cf6 cmd\cf2 \
	
\b \cf2 end
\b0 \cf2  
\b \cf2 if
\b0 \cf2 \

\b \cf2 end
\b0 \cf2  \cf7 do_log\cf2 \
\
\
\cf5 --\'bb 4. "Property getters" (stored in global variables, with initialization code)\cf2 \
\

\b \cf2 global
\b0 \cf2  \cf6 pashua_binary\cf2 \

\b \cf2 global
\b0 \cf2  \cf6 log_to_file\cf2 \
\

\b \cf2 on
\b0 \cf2  \cf7 _get_pashua_posix_path\cf2 ()\
	
\b \cf2 global
\b0 \cf2  \cf6 pashua_binary\cf2 \
	
\b \cf2 try
\b0 \cf2 \
		
\b \cf2 return
\b0 \cf2  \cf6 pashua_binary\cf2 \
	
\b \cf2 on
\b0 \cf2  
\b \cf2 error
\b0 \cf2  \cf4 number\cf2  -\cf2 2753\cf2  \cf5 --The variable <pashua_path> is not defined\cf2 \
		\cf5 -- look for a reference to the Pashua binary\cf2 \
		
\b \cf2 try
\b0 \cf2 \
			\cf5 --TODO: fix this, depends on "show extension" setting of Finder\cf2 \
			
\b \cf2 set
\b0 \cf2  \cf6 app_location\cf2  
\b \cf2 to
\b0 \cf2  
\b \cf8 path to resource
\b0 \cf2  \cf2 "Pashua.app"\cf2  \cf8 in directory\cf2  \cf2 "bin"\cf2  
\b \cf2 as
\b0 \cf2  
\i \cf4 text
\i0 \cf2 \
			
\b \cf2 return
\b0 \cf2  (\cf3 POSIX path\cf2  
\b \cf2 of
\b0 \cf2  \cf6 app_location\cf2 ) & \cf2 "Contents/MacOS/Pashua"\cf2 \
		
\b \cf2 on
\b0 \cf2  
\b \cf2 error
\b0 \cf2  \cf4 number\cf2  -\cf2 192\cf2  \cf5 --A resource wasn\'92t found.\cf2 \
			
\b \cf2 repeat
\b0 \cf2  
\b \cf2 with
\b0 \cf2  \cf6 pashua_location\cf2  
\b \cf2 in
\b0 \cf2  [
\b \cf8 path to
\b0 \cf2  
\i \cf9 applications folder
\i0 \cf2  \cf8 from\cf2  
\i \cf9 user domain
\i0 \cf2 , 
\b \cf8 path to
\b0 \cf2  
\i \cf9 applications folder
\i0 \cf2  \cf8 from\cf2  
\i \cf9 local domain
\i0 \cf2 ]\
				
\b \cf2 set
\b0 \cf2  \cf6 app_location\cf2  
\b \cf2 to
\b0 \cf2  (\cf6 pashua_location\cf2  
\b \cf2 as
\b0 \cf2  
\i \cf4 text
\i0 \cf2 ) & \cf2 "Pashua.app:"\cf2 \
				
\b \cf2 tell
\b0 \cf2  
\i \cf4 application
\i0 \cf2  \cf2 "Finder"\cf2 \
					
\b \cf2 if
\b0 \cf2  
\i \cf4 alias
\i0 \cf2  \cf6 app_location\cf2  
\b \cf4 exists
\b0 \cf2  
\b \cf2 then
\b0 \cf2 \
						
\b \cf2 set
\b0 \cf2  \cf6 pashua_binary\cf2  
\b \cf2 to
\b0 \cf2  (
\b \cf2 my
\b0 \cf2  \cf3 POSIX path\cf2  
\b \cf2 of
\b0 \cf2  
\i \cf4 alias
\i0 \cf2  \cf6 app_location\cf2 ) & \cf2 "Contents/MacOS/Pashua"\cf2 \
						
\b \cf2 return
\b0 \cf2  \cf6 pashua_binary\cf2 \
					
\b \cf2 end
\b0 \cf2  
\b \cf2 if
\b0 \cf2 \
				
\b \cf2 end
\b0 \cf2  
\b \cf2 tell
\b0 \cf2 \
			
\b \cf2 end
\b0 \cf2  
\b \cf2 repeat
\b0 \cf2 \
		
\b \cf2 end
\b0 \cf2  
\b \cf2 try
\b0 \cf2 \
		
\b \cf2 error
\b0 \cf2  \cf2 "Can't locate the path of Pashua.app. Download it from http://www.bluem.net/files/Pashua.dmg and save it in the 'Applications' folder."\cf2  \cf4 number\cf2  \cf2 1002\cf2 \
	
\b \cf2 end
\b0 \cf2  
\b \cf2 try
\b0 \cf2 \

\b \cf2 end
\b0 \cf2  \cf7 _get_pashua_posix_path\cf2 \
\

\b \cf2 on
\b0 \cf2  \cf7 _do_log_to_file\cf2 ()\
	
\b \cf2 global
\b0 \cf2  \cf6 log_to_file\cf2 \
	
\b \cf2 try
\b0 \cf2 \
		
\b \cf2 return
\b0 \cf2  \cf6 log_to_file\cf2 \
	
\b \cf2 on
\b0 \cf2  
\b \cf2 error
\b0 \cf2  \cf4 number\cf2  -\cf2 2753\cf2  \cf5 --The variable <log_to_file> is not defined:\cf2 \
		
\b \cf2 try
\b0 \cf2 \
			
\b \cf2 set
\b0 \cf2  \cf6 log_to_file\cf2  
\b \cf2 to
\b0 \cf2  (
\b \cf8 do shell script
\b0 \cf2  \cf2 "defaults read com.catsdeep.ASPashua do_log"\cf2 ) 
\b \cf2 is
\b0 \cf2  \cf2 "1"\cf2 \
		
\b \cf2 on
\b0 \cf2  
\b \cf2 error
\b0 \cf2  \cf4 number\cf2  \cf2 1\cf2 \
			
\b \cf2 set
\b0 \cf2  \cf6 log_to_file\cf2  
\b \cf2 to
\b0 \cf2  
\i \cf3 false
\i0 \cf2 \
		
\b \cf2 end
\b0 \cf2  
\b \cf2 try
\b0 \cf2 \
	
\b \cf2 end
\b0 \cf2  
\b \cf2 try
\b0 \cf2 \
	
\b \cf2 return
\b0 \cf2  \cf6 log_to_file\cf2 \

\b \cf2 end
\b0 \cf2  \cf7 _do_log_to_file\cf2 \
}